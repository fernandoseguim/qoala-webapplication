@model Website.Models.ViewModels.CommentViewModel
@if (Session["token"] != null)
{
    using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form-comment", role = "form" }))
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ReturnUrl)
            @Html.HiddenFor(model => model.IdComment)
            @Html.HiddenFor(model => model.IdPost)
            <strong> Deixe seu comentário abaixo </strong>
            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @rows = 5, @cols = 50 } )
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.IdPost)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Comentar" class="btn btn-default" />
                </div>
            </div>
        </div>

        <div id="feedback"></div>
    }
}
else
{
    <strong>Você precisa se logar para comentar</strong>
}